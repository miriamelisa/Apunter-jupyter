
CREATE TABLE CONTACTADOS(
	COD INTEGER NOT NULL auto_increment,
    NOMBRE VARCHAR(20) NOT NULL,
    FNACI DATE,
    CONSTRAINT CONTACTOS_CS PRIMARY KEY (COD)
);

CREATE TABLE REGISTROS(
ID INT NOT NULL,
FECHA DATE,
USUARI VARCHAR(30)
);

/*----------------------------------------------------------*/

DELIMITER //
CREATE TRIGGER CONTACTADOS_AFTER
AFTER INSERT
   ON CONTACTADOS FOR EACH ROW
BEGIN

   DECLARE USUARIO varchar(50);

   SELECT USER() INTO USUARIO;

   INSERT INTO REGISTROS( ID,FECHA,USUARI) VALUES ( NEW.COD,SYSDATE(),USUARIO );

END; // 

DELIMITER ;

/*------------------------------------------------------------*/

SELECT USER();
SHOW TRIGGERS;
SELECT * FROM CONTACTADOS;
SELECT * FROM REGISTROS;

INSERT INTO CONTACTADOS ( NOMBRE, FNACI) VALUES ( 'RATATUI', SYSDATE() );

DELIMITER //
CREATE TRIGGER UPDATE_FNACI 
	BEFORE UPDATE ON CONTACTADOS
FOR EACH ROW
BEGIN
	IF NEW.FNACI > '2019-01-01' THEN
		SET NEW.FNACI = '2018-12-31';
    END IF;
END;//
DELIMITER ;

UPDATE CONTACTADOS SET FNACI='2019-03-01' WHERE COD=1;

/*-------------------------- TRIGGERS - LANZADORES -----------------------------*/

SHOW TRIGGERS;
DROP TRIGGER [IF EXISTS] NOMBRE_TRIGGER;
DROP TRIGGER BASE_DE_DATOS.NOMBRE_TRIGGER;

---------------------------------------------------------------------------------
CREATE TABLE PRUEBA1(C1 INT);
CREATE TABLE PRUEBA2(C2 INT);
CREATE TABLE PRUEBA3(C3 INT NOT NULL AUTO_INCREMENT PRIMARY KEY);
CREATE TABLE PRUEBA4(
  C4 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
  B4 INT DEFAULT 0
);

DELIMITER | /*PUEDE SER*/ DELIMITER //

CREATE TRIGGER LANZADOR BEFORE INSERT ON PRUEBA1
  FOR EACH ROW BEGIN
    INSERT INTO PRUEBA2 SET C2 = NEW.C1;
    DELETE FROM PRUEBA3 WHERE C3 = NEW.C1;  
    UPDATE PRUEBA4 SET B4 = B4 + 1 WHERE C4 = NEW.C1;
  END //

DELIMITER;

INSERT INTO PRUEBA3 (C3) VALUES 
  (NULL), (NULL), (NULL), (NULL), (NULL), 
  (NULL), (NULL), (NULL), (NULL), (NULL);

INSERT INTO PRUEBA4 (C4) VALUES 
  (0), (0), (0), (0), (0), (0), (0), (0), (0), (0);
  
  --------------------------   DESPUES LANZAR -----------------------------
  
INSERT INTO PRUEBA1 VALUES (2), (8), (6), (8), (3), (5), (3), (6);

----------------------------   EJECUTAR - VER RESULTADOS ------------------

SELECT * FROM PRUEBA1;

SELECT * FROM PRUEBA2;

SELECT * FROM PRUEBA3;

SELECT * FROM PRUEBA4;

-----------------------------------------------------------------------------

/* TRIGGERS PARA UPDATE */

DELIMITER //
CREATE TRIGGER CLIENTE
BEFORE UPDATE ON CLIENTE FOR EACH ROW
BEGIN
	IF NEW.EDAD<0 THEN
		SET NEW.EDAD = NULL;
	END IF;
END;
DELIMITER;

DELIMITER //
CREATE TRIGGER PEDIDOS
BEFORE UPDATE ON PEDIDO
FOR EACH ROW
BEGIN
	UPDATE TOTAL_VENTAS
		SET total=total+(NEW.total-OLD.total)
	WHERE idcliente=NEW.idcliente;
END
DELIMITER;

DELIMITER //
CREATE TRIGGER FACTURAS
AFTER UPDATE ON FACTURA FOR EACH ROW
BEGIN
	INSERT INTO LOG_ACTUALIZACION (idusuario, descripcion)
	VALUES (user(), CONCAT('Se produjeron cambios en el registro ','(',
	OLD.iddetalle,',', OLD.idfactura,',',OLD.idproducto,',',
	OLD.precio,',', OLD.unidades,') por ',
	'(', NEW.iddetalle,',', NEW.idfactura,',',NEW.idproducto,',',
	NEW.precio,',', NEW.unidades,')'));
END;
DELIMITER;

/* TRIGGERS PARA INSERT */

DELIMITER //
CREATE TRIGGER PEDIDOS
BEFORE INSERT ON PEDIDO
FOR EACH ROW
BEGIN
DECLARE NUM_FILAS INT;
	SELECT COUNT(*)
	INTO NUM_FILAS
	FROM TOTAL_VENTAS
	WHERE CODCLIENTE=NEW.CODCLIENTE;
		IF NUM_FILAS > 0 THEN
		UPDATE TOTAL_VENTAS
		SET TOTAL=TOTAL+NEW.TOTAL
		WHERE CODCLIENTE=NEW.CODCLIENTE;
		ELSE
		INSERT INTO TOTAL_VENTAS
		(CODCLIENTE,TOTAL)
		VALUES(NEW.CODCLIENTE,NEW.TOTAL);
		END IF;
END
DELIMITER;

/* TRIGGERS PARA DELETE */

CREATE TRIGGER PEDIDO_BD_TRIGGER
BEFORE DELETE ON PEDIDO
FOR EACH ROW
BEGIN
	UPDATE TOTAL_VENTAS
	SET total=total-OLD.total
	WHERE idcliente=OLD.idcliente;
END//

------------------------------------------------------------------------------
--                EJEMPLO COMPLETO FUNCIONES Y TRIGGERS                     --
------------------------------------------------------------------------------

CREATE DATABASE CAMPUSFP;
USE CAMPUSFP;

CREATE TABLE ALUMNOS (
ID INT PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(20) NOT NULL,
APEL1 VARCHAR(20) NOT NULL,
APEL2 VARCHAR(20) NOT NULL,
FNACI DATE,
EDAD DOUBLE,
EX1 DOUBLE,
EX2 DOUBLE,
EX3 DOUBLE,
NOTA DOUBLE,
CALIFICACION VARCHAR(20)
);

CREATE TABLE ACTAS (
ID INT PRIMARY KEY AUTO_INCREMENT,
APELNOM VARCHAR(60) NOT NULL,
EVALUCION VARCHAR(20),
FECHA DATE
);

CREATE TABLE RECUPERACIONES (
ID INT PRIMARY KEY AUTO_INCREMENT,
APELLIDOSNOM VARCHAR(60) NOT NULL,
NOTA DOUBLE,
FECHA DATE
);

INSERT INTO ALUMNOS (NOMBRE,APEL1,APEL2,FNACI,EX1,EX2,EX3) VALUES 
('PEDRO','LOPEZ', 'ALVAREZ', '2001-01-01','5.5','6.70','7.5'),
('PEPE','LOPEZ', 'ALVAREZ', '2003-10-20','8.5','7.70','7.5'),
('RAMIRO','LOPEZ', 'ALVAREZ', '2001-01-01','5.5','5.70','2.5'),
('ALBERTO','LOPEZ', 'ALVAREZ', '2010-05-01','5.5','6.70','9.5'),
('LUIS','LOPEZ', 'ALVAREZ', '2006-08-01','3.5','4.70','9.5'),
('ANA','LOPEZ', 'ALVAREZ', '2003-12-01','1.5','5.70','7.5');

SELECT * FROM ALUMNOS;
SELECT * FROM ACTAS;
SELECT * FROM RECUPERACIONES;

SELECT MAX(ID) FROM ALUMNOS;
SET NACIMIENTO = (SELECT FNACI FROM ALUMNOS WHERE ID = 1);
SELECT EDADALUM((SELECT FNACI FROM ALUMNOS WHERE ID = 1));

UPDATE ALUMNOS SET NOTA = 0.0;

SET SQL_SAFE_UPDATES=0;
---------------------------------------------------------------------------

CREATE DEFINER=`root`@`localhost` FUNCTION `NOTALETRA`(NOTA DOUBLE) 
RETURNS char(30) CHARSET utf8mb4
BEGIN
	DECLARE RESULTADO CHAR(30);
    IF ((NOTA>=0) && (NOTA<=10)) THEN
		IF ((NOTA>=0) && (NOTA<4)) THEN
			SET RESULTADO = 'Deficiente';
		ELSEIF ((NOTA>=4) && (NOTA<5)) THEN
			SET RESULTADO = 'Suspenso';
		ELSEIF ((NOTA>=5) && (NOTA<6)) THEN
			SET RESULTADO = 'Sufiente';
		ELSEIF ((NOTA>=6) && (NOTA<7)) THEN
			SET RESULTADO = 'Bien';
		ELSEIF ((NOTA>=7) && (NOTA<9)) THEN
			SET RESULTADO = 'Notable';
		ELSEIF ((NOTA>=9) && (NOTA<10)) THEN
			SET RESULTADO = 'Sobresaliente';
		END IF;
    ELSE
		SET RESULTADO = 'LA NOTA INTRODUCIDA ES ERRONEA';
    END IF;
RETURN RESULTADO;
END

---------------------------------------------------------------------------
DELIMITER //
CREATE TRIGGER EVALUA
BEFORE UPDATE ON ALUMNOS FOR EACH ROW
BEGIN

	SET NEW.CALIFICACION = (SELECT NOTALETRA(NEW.NOTA));

	IF NEW.CALIFICACION <> 'Suspenso' THEN
		INSERT INTO ACTAS VALUES (null,NEW.NOMBRE,NEW.NOTA,SYSDATE());
    END IF;
    
	IF NEW.CALIFICACION = 'Suspenso' THEN
		INSERT INTO RECUPERACIONES VALUES (null,NEW.NOMBRE,NEW.NOTA,SYSDATE());
    END IF;
	
END//
DELIMITER ;

DROP TRIGGER EVALUA;

SHOW TRIGGERS;







